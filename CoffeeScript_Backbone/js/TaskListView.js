// Generated by CoffeeScript 1.6.2
/*
=========================
DO NOT EDIT THIS FILE!!!!
=========================
*/


(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TaskListView = (function(_super) {
    __extends(TaskListView, _super);

    function TaskListView() {
      _ref = TaskListView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TaskListView.prototype.className = 'container';

    TaskListView.prototype.$el = $("<div class='container'>\n  <div>Remaining tasks: <span class='tasks-remaining'></span></div>\n  <br />\n  <div class='task-list'></div>\n</div>");

    TaskListView.prototype.initialize = function() {
      this.collection = new Tasks(taskData);
      this.collection.bind('add', this.render, this);
      this.collection.bind('completed', this.render, this);
      return this.render();
    };

    TaskListView.prototype.render = function() {
      this.$('.task-list').children().detach();
      this.$('.task-list').append(this.collection.incompleteItems().map(function(task) {
        return new TaskView(task).render();
      }));
      this.$('.tasks-remaining').html(this.collection.tasksRemaining());
      return this.$el;
    };

    return TaskListView;

  })(Backbone.View);

}).call(this);
